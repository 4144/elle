#!/usr/bin/env python3

import os
import sys
root = os.path.dirname(__file__)
drake = os.path.abspath(os.path.join(root, '../../drake/src'))
sys.path.insert(0, drake)

import resource
resource.setrlimit(resource.RLIMIT_NOFILE, (500, -1))

enable_cryptographic_rotation = bool(os.getenv('INFINIT_CRYPTOGRAPHY_ROTATION', False))
cryptographic_legacy_mode = bool(os.getenv('INFINIT_CRYPTOGRAPHY_LEGACY', False))

import drake
import drake.cxx
import drake.cxx.boost

with drake.Drake('../..') as d:
  cxx_compiler = os.getenv('CXX', 'clang++')
  c_compiler = os.getenv('C', 'clang')
  cxx_toolkit = drake.cxx.GccToolkit(compiler = cxx_compiler, compiler_c = c_compiler)
  os.environ['MACOSX_DEPLOYMENT_TARGET'] = '10.7' # ensure that build is compatible with 10.7

  cxx_config = drake.cxx.Config()

  # XXX[still required but it shouldn't be the case]
  cxx_config.flag('-stdlib=libc++')

  python3 = '/usr/local/Frameworks/Python.framework/Versions/3.4'
  d.run(cxx_toolkit,
        None,
        cxx_config,
        enable_cryptographic_rotation = enable_cryptographic_rotation,
        cryptographic_legacy_mode = cryptographic_legacy_mode,
        python3 = python3,
        # XXX fuse = '/usr/local',
  )
