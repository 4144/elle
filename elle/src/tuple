// -*- c++ -*-
#ifndef ELLE_TUPLE
# define ELLE_TUPLE

# include <ostream>
# include_next <tuple>
# include <elle/printf-fwd.hh>

namespace std
{
  namespace
  {
    template <int idx, typename T>
    typename std::enable_if<idx == tuple_size<T>::value, void>::type
    print_tuple(std::ostream&, T const&, bool)
    {};

    template <int idx, typename T>
    typename std::enable_if<idx < tuple_size<T>::value, void>::type
    print_tuple(std::ostream& s, T const& v, bool first)
    {
      if (!first)
        s << ", ";
      s << get<idx>(v);
      print_tuple<idx + 1, T>(s, v, false);
    };
  }

  template <typename ... Elts>
  ostream&
  operator <<(ostream& out, tuple<Elts...> const& v)
  {
    out << "(";
    print_tuple<0, tuple<Elts...>>(out, v, true);
    out << ")";
    return out;
  }
}

#endif
