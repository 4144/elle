#pragma once

#include_next <algorithm>

namespace std
{
  template <typename Container, typename UnaryPredicate>
  bool
  any(Container const& c, UnaryPredicate const& p)
  {
    return std::find_if(c.begin(), c.end(), p) != c.end();
  }

  template <typename Container, typename UnaryPredicate>
  bool
  all(Container const& c, UnaryPredicate const& p)
  {
    for (auto const& e: c)
      if (!p(e))
        return false;
    return true;
  }
}
