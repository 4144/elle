#! /bin/bash

ROOTDIR="$PWD"
VERBOSE=OFF
COLOR=ON
CCACHE=ON
DISTCC=OFF
DEBUG=1
# XXX guess the number of jobs with distcc -j
MAKEOPT="--quiet -j$(($(grep processor /proc/cpuinfo | wc -l) + 1))"
CPPFLAGS="$CPPFLAGS -D_LARGE_FILE -D_FILE_OFFSET_BITS=64 -DWINVER=0x0600"
CFLAGS="$CFLAGS -std=c99 -W -Wall -Wstrict-prototypes -pipe"
CFLAGS="$CFLAGS -Wfloat-equal -Wundef -Wpointer-arith"
CFLAGS="$CFLAGS -Wmissing-declarations -Wnested-externs"
CFLAGS="$CFLAGS -Wmissing-prototypes"
CXXFLAGS="$CXXFLAGS -std=gnu++0x -pipe -W -Wall -Wundef -Wpointer-arith -Wabi"
CXXFLAGS="$CXXFLAGS -Wcast-align -Wold-style-cast -Wno-empty-body"
LDFLAGS="$LDFLAGS"
PREFIX="/usr/local"
QTCREATOR=0
LINUX32=OFF
LINUX64=OFF
WIN32=OFF

function usage()
{
    echo -n "usage: $0
  --verbose		verbose Makefiles
  --no-color		no colors
  --release		disable debug
  --debug		enables debug
  --qt-creator          enable qt-creator support
  --distcc              enable distcc
  --ccache              enable ccache
  --prefix=<path>       set the install prefix
  --linux32             enable linux 32bit build
  --linux64             enable linux 64bit build
  --win32               enable windows 32bit build
"
    exit 0
}

function update_install_path()
{
    eval 'if [[ -z "$'"$1"'" ]] ; then
        '"$1"'="${PREFIX}/$2"
    fi'
}

until [[ $# -eq 0 ]] ;
do
    case "$1" in
        --verbose)
            VERBOSE=ON
            MAKEOPT="$(echo $MAKEOPT | sed s,--quiet,,g)"
            ;;
        --no-color)
            COLOR=OFF
            ;;
	--release)
	    DEBUG=0
	    ;;
	--debug)
	    DEBUG=1
	    ;;
	--ccache)
	    CCACHE=ON
	    ;;
	--no-ccache)
	    CCACHE=OFF
	    ;;
        --qt-creator)
            QTCREATOR=1
            ;;
        --distcc)
            DISTCC=ON
            ;;
        --linux32)
            LINUX32=ON
            ;;
        --linux64)
            LINUX64=ON
            ;;
        --win32)
            WIN32=ON
            ;;
        --prefix=*)
        PREFIX="${1/--prefix=/}"
        ;;
	-h|--help|help)
	    usage
	    ;;
	*)
            echo wrong argument "$1"
	    usage
	    ;;
    esac
    shift
done

if ! which ccache 2>/dev/null >/dev/null; then
    CCACHE=OFF
    echo "---[ ccache not found"
else
    echo "---[ ccache found"
fi

if ! which distcc 2>/dev/null >/dev/null; then
    DISTCC=OFF
    echo "---[ distcc not found"
else
    echo "---[ distcc found"
fi

if [[ $DEBUG -eq 0 ]]; then
    CFLAGS="$CFLAGS -DNDEBUG -Os -s"
    CXXFLAGS="$CXXFLAGS -DNDEBUG -Os -s"
    echo "---[ settings release flags"
else
    CFLAGS="$CFLAGS -g"
    CXXFLAGS="$CXXFLAGS -g"
    echo "---[ settings debug flags"
fi

if [[ $QTCREATOR -eq 1 ]] ; then
    CMAKE_GENERATOR="-GCodeBlocks - Unix Makefiles"
else
    CMAKE_GENERATOR="-GUnix Makefiles"
fi

if [[ "$DISTCC" = ON ]] ; then
    DISTCC="$(which distcc) "
else
    DISTCC=""
fi

CPPFLAGS="${CPPFLAGS}"
CFLAGS="${CPPFLAGS} ${CFLAGS}"
CXXFLAGS="${CPPFLAGS} ${CXXFLAGS}"

function gen_build_dir()
(
    echo "---[ configuration for ${BUILDDIR}:"

    rm -rf "$BUILDDIR"
    mkdir -p "$BUILDDIR" &&
    cd "$BUILDDIR" &&
    cmake \
        -DCMAKE_VERBOSE_MAKEFILE=$VERBOSE \
        -DCMAKE_COLOR_MAKEFILE=$COLOR \
        -DCMAKE_INSTALL_PREFIX="$PREFIX" \
        $@ \
        "$CMAKE_GENERATOR" "$ROOTDIR"
    if [ ${?} -ne 0 ] ; then
	exit 1;
    fi
)

MACHINE=$(uname -m)

if [[ $LINUX64 = ON ]] ; then
    BUILDDIRS="$BUILDDIRS build/linux64"
    (CC="${DISTCC}gcc" CXX="${DISTCC}g++" \
        CFLAGS="${CFLAGS} -m64" CXXFLAGS="${CXXFLAGS} -m64" \
        BUILDDIR=build/linux64 gen_build_dir)
fi

if [[ $LINUX32 = ON ]] ; then
    BUILDDIRS="$BUILDDIRS build/linux32"
    (CC="${DISTCC}gcc" CXX="${DISTCC}g++" \
        CFLAGS="${CFLAGS} -m32" CXXFLAGS="${CXXFLAGS} -m32" \
        BUILDDIR=build/linux32 gen_build_dir)
fi

if [[ $WIN32 = ON ]] ; then
    BUILDDIRS="$BUILDDIRS build/win32"
    (QMAKESPEC=/usr/share/qt/mkspecs/win32-x-g++/ \
        CC="${DISTCC}i486-mingw32-gcc" CXX="${DISTCC}i486-mingw32-g++" \
        CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" \
        BUILDDIR=build/win32 gen_build_dir \
        -DCMAKE_SYSTEM_NAME=Windows \
        -DCMAKE_RC_COMPILER=/usr/bin/i486-mingw32-windres \
        -DCMAKE_FIND_ROOT_PATH=/usr/i486-mingw32 \
        -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
        -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
        -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY)
fi

cd "$ROOTDIR" &&
cat >config.mk <<EOF
BUILDDIRS=$BUILDDIRS
MAKEOPT=$MAKEOPT
EOF
