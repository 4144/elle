### build for your own machine

cd build/
cmake ../
make

### win32 target on archlinux

install with pacman:
community/mingw32-gcc
community/mingw32-runtime
community/mingw32-w32api
community/mingw32-binutils
community/mingw32-pthreads

install with AUR:
mingw32-zlib
mingw32-openssl
mingw32-qt
mingw32-msgpack
mingw32-pdcurses
mingw32-readline

rm -rf build-win32 &&
mkdir build-win32 &&
cd build-win32 &&
QMAKESPEC=/usr/share/qt/mkspecs/win32-x-g++/ cmake \
-G"CodeBlocks - Unix Makefiles" \
-DCMAKE_SYSTEM_NAME=Windows \
-DCMAKE_C_COMPILER=/usr/bin/i486-mingw32-gcc \
-DCMAKE_CXX_COMPILER=/usr/bin/i486-mingw32-g++ \
-DCMAKE_RC_COMPILER=/usr/bin/i486-mingw32-windres \
-DCMAKE_FIND_ROOT_PATH=/usr/i486-mingw32 \
-DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
-DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
-DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
..


### Writing portable code and getting the list of predefined gcc macro:

echo | x86_64-unknown-linux-gnu-gcc -E -dM -
  #define __unix__ 1
  #define __x86_64 1
  #define __linux 1
  #define __unix 1
  #define __linux__ 1
  #define __gnu_linux__ 1
  #define unix 1
  #define __ELF__ 1
  #define __x86_64__ 1
  #define linux 1
  #define __amd64__ 1

echo | i486-mingw32-gcc -E -dM -
  #define _WIN32 1
  #define __WIN32 1
  #define __MINGW32__ 1
  #define __WINNT 1
  #define __WINNT__ 1
  #define __WIN32__ 1
  #define __i386 1
  #define _X86_ 1
  #define __i486__ 1
  #define __i386__ 1
  #define __MSVCRT__ 1
  #define __i486 1
  #define WIN32 1
  #define WINNT 1
  #define i386 1

Then in elle/system/Platform.hh is defined:
  #define INFINIT_WIN32 1/0
  #define INFINIT_UNIX 1/0
depending on your current build.

### how to use infinit
8setup -i
8authority -c

