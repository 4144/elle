find_package(Python3Libs)

#find_package(Boost COMPONENTS python3 REQUIRED)
find_package(Boost COMPONENTS python3)

if (NOT Boost_PYTHON3_LIBRARY)
	#XXX on gentoo boost python package has complete python version suffix
	find_package(Boost COMPONENTS python-3.2)
	set(Boost_PYTHON3_LIBRARY ${Boost_PYTHON-3.2_LIBRARY})
endif()

if (NOT(Boost_LIBRARIES MATCHES ".*boost_python.*"))
	message(FATAL_ERROR "Couldn't find boost_python3{1,2} library")
endif()

include_directories("${PYTHON3_INCLUDE_DIR}")

set(LIBRARY_OUTPUT_PATH "${LIBRARY_OUTPUT_PATH}/python")

add_definitions(-fPIC -fno-strict-aliasing)
file(GLOB gap_srcs ../State.cc ../gap.cc ../MetricReporter.cc)
list(APPEND gap_srcs pygap.cc)
add_library(_gap SHARED ${gap_srcs})
link_directories(${CMAKE_CURRENT_BINARY_DIR})

target_link_libraries(_gap
        trophol
	${INFINIT_LIBRARIES}
        ${INFINIT_OPENSSL_SHARED_LIBRARIES}
	${Boost_PYTHON3_LIBRARY}
	${PYTHON3_LIBRARIES}
	${QT_LIBRARIES}
)

set_target_properties(_gap PROPERTIES
	PREFIX ""
)
if(UNIX)
	set_target_properties(_gap PROPERTIES
		SUFFIX ".so"
	)
endif()

message(STATUS "copying gap.py to ${LIBRARY_OUTPUT_PATH}")
file(COPY gap.py DESTINATION ${LIBRARY_OUTPUT_PATH})
