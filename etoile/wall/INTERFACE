Components
----------

File
Directory
Link
User
Group

Community
System

Journal
Depot
Hole

Object
------

Object.Load(...)
Object.Create(...)
Object.Lock(...) -> XXX though with quorums there is always a lock!!! can be
                        useful locally though.
Object.Release(...)
Object.Information(...)
Object.Rollback(...) # Refresh()?
Object.Attributes.List(...)
Object.Attributes.Add(...)
Object.Attributes.Remove(...)
Object.Attributes.Update(...)
Object.Access.List(...)
Object.Access.Grant(...)
Object.Access.Revoke(...)
Object.Access.Block(...)
Object.Destroy(...)
Object.Store(...)

File: Object
----

File.Load(path, &id)
File.Create(...)
File.Read(...)
File.Write(...)
File.Access.List(...)
File.Access.Grant(...)
File.Access.Revoke(...)
File.Access.Block(...)
File.Size(...)
File.Destroy(...)
File.Store(...)

Directory: Object
---------

Directory.Load(path, &id)
Directory.Create(...)
Directory.Consult(...)
Directory.Add(...)
Directory.Remove(...)
Directory.Update(...)
Directory.Rename(...)
Directory.Access.List(...)
Directory.Access.Grant(...)
Directory.Access.Revoke(...)
Directory.Access.Block(...)
Directory.Destroy(...)
Directory.Store(...)

Link: Object
----

Link.Load(path, &id)
Link.Create(...)
Link.Resolve(...)
Link.Bind(...)
Link.Access.List(...)
Link.Access.Grant(...)
Link.Access.Revoke(...)
Link.Access.Block(...)
Link.Destroy(...)
Link.Store(...)

User
----

User.Load(name, &id)
...
User.Store(...)

Group
-----

Group.Load(name, &id)
...
Group.Store(id)

Community
---------

Community.Request(...) -> change an object

System
------

System.Create()
System.Information()

System.Authenticate()

--

XXX ca devrait etre simple de ramener une ancienne version.
XXX ca devrait etre simple de modifier une ancienne version pour quelle
    devienne la courante bien que cette operation revient a remettre
    une ancienne au premier plan pour ensuite la modifier. vu que ca reste
    dans un meme contexte, ca revient completement au meme.
XXX ca devrait etre possible d'avoir plusieurs sous-contexts dans un
    context, via un 'name' par exemple
XXX pouvoir recuperer des infos sur les contexts encore en vie: taux d'upload
    etc.
XXX 1 thread par contexte
XXX contexts look like transactions but are not atomic. they are just
    construct for performing mutliple operations on the same object(s).
