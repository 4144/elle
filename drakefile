import drake
import drake.cxx

config = None
lib_static = None
lib_dynamic = None

def configure(cxx_toolkit, cxx_config):

  global config, lib_static, lib_dynamic

  config = drake.cxx.Config()
  config.standard = drake.cxx.Config.cxx_0x

  cxx_config = cxx_config + config
  cxx_config.lib('curl')
  cxx_config.lib('readline')

  sources = drake.nodes(
    'Buffer.cc',
    'Buffer.hh',
    'Elle.cc',
    'Elle.hh',
    'IOStream.cc',
    'IOStream.hh',
    'Printable.cc',
    'Printable.hh',
    'assert.cc',
    'assert.hh',
    'compiler.hh',
    'concept/Fileable.hh',
    'concept/Fileable.hxx',
    'serialize/Serializable.hh',
    'serialize/Serializable.hxx',
    'concept/Uniquable.hh',
    'concept/Uniquable.hxx',
    'concept/fwd.hh',
    'concurrency/Callback.hh',
    'concurrency/Callback.hxx',
    'concurrency/Closure.hh',
    'concurrency/Closure.hxx',
    'concurrency/Function.hh',
    'concurrency/Function.hxx',
    'concurrency/Method.hh',
    'concurrency/Method.hxx',
    'concurrency/Program.cc',
    'concurrency/Program.hh',
    'concurrency/Routine.cc',
    'concurrency/Routine.hh',
    'concurrency/Scheduler.cc',
    'concurrency/Scheduler.hh',
    'concurrency/Signal.hh',
    'concurrency/Signal.hxx',
    'concurrency/fwd.hh',
    'container/fwd.hh',
    'container/timeline/Bucket.hh',
    'container/timeline/Bucket.hxx',
    'container/timeline/Timeline.hh',
    'container/timeline/Timeline.hxx',
    'container/timeline/fwd.hh',
    'cryptography/Cipher.cc',
    'cryptography/Cipher.hh',
    'cryptography/Cipher.hxx',
    'cryptography/Clear.hh',
    'cryptography/Code.cc',
    'cryptography/Code.hh',
    'cryptography/Code.hxx',
    'cryptography/Cryptography.cc',
    'cryptography/Cryptography.hh',
    'cryptography/Digest.cc',
    'cryptography/Digest.hh',
    'cryptography/Digest.hxx',
    'cryptography/KeyPair.cc',
    'cryptography/KeyPair.hh',
    'cryptography/KeyPair.hxx',
    'cryptography/LargeSerializer.hxx',
    'cryptography/OneWay.cc',
    'cryptography/OneWay.hh',
    'cryptography/OneWay.hxx',
    'cryptography/Plain.hh',
    'cryptography/PrivateKey.cc',
    'cryptography/PrivateKey.hh',
    'cryptography/PrivateKey.hxx',
    'cryptography/PublicKey.cc',
    'cryptography/PublicKey.hh',
    'cryptography/PublicKey.hxx',
    'cryptography/Random.cc',
    'cryptography/Random.hh',
    'cryptography/SecretKey.cc',
    'cryptography/SecretKey.hh',
    'cryptography/SecretKey.hxx',
    'cryptography/Seed.cc',
    'cryptography/Seed.hh',
    'cryptography/Seed.hxx',
    'cryptography/Signature.cc',
    'cryptography/Signature.hh',
    'cryptography/Signature.hxx',
    'cryptography/fwd.hh',
    'format/fwd.hh',
    'format/ini/File.cc',
    'format/ini/File.hh',
    'format/ini/Section.cc',
    'format/ini/Section.hh',
    'format/ini/Section.hxx',
    'format/ini/fwd.hh',
    'format/json.hh',
    'format/json/Array.cc',
    'format/json/Array.hh',
    'format/json/Array.hxx',
    'format/json/Bool.cc',
    'format/json/Bool.hh',
    'format/json/Dictionary.cc',
    'format/json/Dictionary.hh',
    'format/json/Dictionary.hxx',
    'format/json/Factory.cc',
    'format/json/Factory.hh',
    'format/json/Factory.hxx',
    'format/json/Float.cc',
    'format/json/Float.hh',
    'format/json/Integer.cc',
    'format/json/Integer.hh',
    'format/json/Null.cc',
    'format/json/Null.hh',
    'format/json/Object.cc',
    'format/json/Object.hh',
    'format/json/Object.hxx',
    'format/json/Parser.cc',
    'format/json/Parser.hh',
    'format/json/String.cc',
    'format/json/String.hh',
    'format/json/_detail.hh',
    'format/json/fwd.hh',
    'fwd.hh',
    'idiom/Close.hh',
    'idiom/Open.hh',
    'io/Console.cc',
    'io/Console.hh',
    'io/Directory.cc',
    'io/Directory.hh',
    'io/Dumpable.cc',
    'io/Dumpable.hh',
    'io/File.cc',
    'io/File.hh',
    'io/Link.cc',
    'io/Link.hh',
    'io/Path.cc',
    'io/Path.hh',
    'io/Path.hxx',
    'io/Pattern.cc',
    'io/Pattern.hh',
    'io/Piece.cc',
    'io/Piece.hh',
    'io/Unique.hh',
    'io/fwd.hh',
    'log.cc',
    'log.hh',
    'log.hxx',
    'log/Logger.cc',
    'log/Logger.hh',
    'log/Logger.hxx',
    'network/Host.cc',
    'network/Host.hh',
    'network/Host.hxx',
    'network/Interface.cc',
    'network/Interface.hh',
    'network/Interface.hxx',
    'network/Locus.cc',
    'network/Locus.hh',
    'network/Locus.hxx',
    'network/Port.hh',
    'network/fwd.hh',
    'os.hh',
    'os/getenv.cc',
    'os/getenv.hh',
    'os/path.cc',
    'os/path.hh',
    'os/path.hxx',
    'print.cc',
    'print.hh',
    'print.hxx',
    'printf.hh',
    'printf.hxx',
    'radix/Allege.hh',
    'radix/Arguments.hh',
    'radix/Arguments.hxx',
    'radix/Entity.hh',
    'radix/Meta.cc',
    'radix/Meta.hh',
    'radix/Object.cc',
    'radix/Object.hh',
    'radix/Object.hxx',
    'radix/Parameters.hh',
    'radix/Parameters.hxx',
    'radix/Radix.cc',
    'radix/Radix.hh',
    'radix/Set.hh',
    'radix/Set.hxx',
    'radix/Trace.cc',
    'radix/Trace.hh',
    'radix/Trait.hh',
    'radix/Trait.hxx',
    'radix/Variables.hh',
    'radix/Variables.hxx',
    'radix/fwd.hh',
    )

  sources += drake.nodes(
    'Version.cc',
    'serialize/ArchivableClass.hh',
    'serialize/ArchiveMode.cc',
    'serialize/ArchiveMode.hh',
    'serialize/ArchiveSerializer.hxx',
    'serialize/ArraySerializer.hxx',
    'serialize/Base64Archive.cc',
    'serialize/Base64Archive.hh',
    'serialize/BaseArchive.hh',
    'serialize/BaseArchive.hxx',
    'serialize/BinaryArchive.hh',
    'serialize/BinaryArchive.hxx',
    'serialize/BufferArchive.cc',
    'serialize/BufferArchive.hh',
    'serialize/HexadecimalArchive.hh',
    'serialize/IniArchive.cc',
    'serialize/IniArchive.hh',
    'serialize/JSONArchive.cc',
    'serialize/JSONArchive.hh',
    'serialize/JSONArchive.hxx',
    'serialize/ListSerializer.hxx',
    'serialize/MapSerializer.hxx',
    'serialize/PairSerializer.hxx',
    'serialize/Pointer.hh',
    'serialize/Pointer.hxx',
    'serialize/Serializable.hh',
    'serialize/Serializable.hxx',
    'serialize/SetSerializer.hxx',
    'serialize/StoreClassVersion.hh',
    'serialize/TupleSerializer.hxx',
    'serialize/VectorSerializer.hxx',
    'serialize/detail/AssociativeSerializer.hh',
    'serialize/detail/MergeArchive.hh',
    'serialize/detail/SequenceSerializer.hh',
    'serialize/footprint.hh',
    'serialize/footprint.hxx',
    'serialize/fwd.hh',
    'standalone/Log.cc',
    'standalone/Log.hh',
    'standalone/Morgue.cc',
    'standalone/Morgue.hh',
    'standalone/Morgue.hxx',
    'standalone/Region.cc',
    'standalone/Region.hh',
    'standalone/Region.hxx',
    'standalone/Report.cc',
    'standalone/Report.hh',
    'standalone/Report.hxx',
    'standalone/Standalone.cc',
    'standalone/Standalone.hh',
    'standalone/fwd.hh',
    'system/Platform.hh',
    'system/System.cc',
    'system/System.hh',
    'types.cc',
    'types.hh',
    'utility/Buffer.cc',
    'utility/Buffer.hh',
    'utility/Buffer.hxx',
    'utility/BufferStream.cc',
    'utility/BufferStream.hh',
    'utility/Duration.cc',
    'utility/Duration.hh',
    'utility/Duration.hxx',
    'utility/Factory.cc',
    'utility/Factory.hh',
    'utility/Factory.hxx',
    'utility/HTTP.cc',
    'utility/HTTP.hh',
    'utility/Parser.cc',
    'utility/Parser.hh',
    'utility/Parser.hxx',
    'utility/Product.hh',
    'utility/Settings.cc',
    'utility/Settings.hh',
    'utility/Time.cc',
    'utility/Time.hh',
    'utility/Time.hxx',
    'utility/URI.hh',
    'utility/Unicode-unix.cc',
    'utility/Unicode.hh',
    'utility/Utility.hh',
    'utility/fwd.hh',
   )

  lib_static = drake.cxx.StaticLib('elle', sources, cxx_toolkit, cxx_config)
  lib_dynamic = drake.cxx.DynLib('elle', sources, cxx_toolkit, cxx_config)
