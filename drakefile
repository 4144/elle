import drake
import drake.cxx

config = None
elle_dynamic = None
elle_static = None
cryptography_dynamic = None
cryptography_static = None
reactor = None
reactor_dynamic = None
reactor_static = None
curly = None
curly_dynamic = None
curly_static = None
asio_udt = None
rule_check = None
rule_tests = None

def configure(cxx_toolkit = None,
              cxx_config = None,
              boost = None,
              curl = None,
              openssl = None,
              enable_rotation = False,
              dopenssl = None,
              prefix = '/usr'):

  global config
  global elle_dynamic, elle_static
  global cryptography_dynamic, cryptography_static
  global reactor, reactor_dynamic, reactor_static
  global curly, curly_dynamic, curly_static

  prefix = drake.Path(prefix)
  if not prefix.absolute():
    prefix = drake.Path('..') / prefix

  cxx_config = drake.cxx.Config(cxx_config)
  cxx_config.export_dynamic = True

  elle = drake.include('elle',
                       cxx_toolkit = cxx_toolkit,
                       cxx_config = cxx_config,
                       boost = boost,
                       curl = curl,
                       prefix = prefix)
  cryptography = drake.include('cryptography',
                               cxx_toolkit = cxx_toolkit,
                               cxx_config = cxx_config,
                               openssl = openssl,
                               enable_rotation = enable_rotation,
                               dopenssl = dopenssl,
                               boost = boost,
                               elle = elle,
                               prefix = prefix)
  reactor = drake.include('reactor',
                          cxx_toolkit = cxx_toolkit,
                          cxx_config = cxx_config,
                          boost = boost,
                          elle = elle,
                          prefix = prefix)

  curly = drake.include('curly',
                        cxx_toolkit = cxx_toolkit,
                        cxx_config = cxx_config,
                        elle = elle,
                        curl = curl,
                        prefix = prefix)

  config = drake.cxx.Config()
  config += elle.config
  config += cryptography.config
  config += reactor.config
  config += curly.config

  elle_dynamic = elle.lib_dynamic
  elle_static = elle.lib_static

  cryptography_dynamic = cryptography.lib_dynamic
  cryptography_static = cryptography.lib_static

  reactor_dynamic = reactor.lib_dynamic
  reactor_static = reactor.lib_static

  curly_dynamic = curly.lib_dynamic
  curly_static = curly.lib_static

  build = drake.Rule('build')
  build << elle.rule_build
  build << cryptography.rule_build
  build << reactor.rule_build
  build << curly.rule_build

  global rule_tests
  rule_tests = drake.Rule('tests')
  rule_tests << elle.rule_tests
  rule_tests << cryptography.rule_tests
  rule_tests << reactor.rule_tests

  global rule_check
  rule_check = drake.Rule('check')
  rule_check << elle.rule_check
  rule_check << cryptography.rule_check
  rule_check << reactor.rule_check

  install = drake.Rule('install')
  install << elle.rule_install
  install << cryptography.rule_install
  install << reactor.rule_install
  install << curly.rule_install
