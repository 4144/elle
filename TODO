---
experiments:
 o differentes taille de cache depot.
 o ne garder dans le cache depot que les PKB pour voir si ca change l'impact.

--- si on dev notre propre systeme d'event, on pourra wrapper FUSE

o coder un fuse_main_common() [helper.c] qui est appelle par fuse_main_real()
  [helper.c] qui est une macro de fuse_main
o modifier la structure fuse [fuse.c] ->se (fuse_session) [fuse_i.h]
  ->ch (fuse_chan) [fuse_session.c] ->op [include/fuse_lowlevel.h]
  .receive
o de ce fait, lors d'un fuse_session_loop(), qui est appelle par
  fuse_main_common(), celui-ci appelle fuse_chan_recv() [fuse_session.c],
  qui lui utilise fuse->se->ch->op.receive() qui pointe donc sur notre
  fonction.
o cela dit, cela n'est pas suffisant puisque c'est fuse_main_common() qui
  appelle fuse_loop() [fuse.c] qui appelle fuse_session_loop() [fuse_loop.c]
  qui boucle indefiniement.
o il faut donc egalement faire que fuse_main_common() n'appelle plus
  fuse_loop() mais notre fonction de loop() qui grosso-modo ne loop pas :)
  mais test et retourne immediatement.

-

o dans le cas d'un fuse multi-thread, c'est pareil ca commence avec
  fuse_main_common() [helper.c] qui appelle fuse_loop_mt() [fuse_mt.c] au lieu
  de fuse_loop() qui se contente de rediriger sur fuse_session_loop_mt()
  [fuse_loop_mt.c]. celle ci travaille les threads.
